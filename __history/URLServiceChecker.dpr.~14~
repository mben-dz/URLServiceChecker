program URLServiceChecker;

{$APPTYPE CONSOLE}

uses
  Winapi.WinInet,
  Winapi.Windows,
  System.SysUtils,
  Classes,
  MMSystem;

procedure ShowProgress(const Msg: string; Progress: Integer);
var
  i: Integer;
begin
  Write(Msg, ' [');
  for i := 1 to 50 do
  begin
    if i <= Progress div 2 then
      Write('#')
    else
      Write(' ');
  end;
  Write('] ', Progress, '%');
  Write(#13); // Move cursor back to the beginning of the line
end;

function GetPageContent(const URL: string): string;
var
  hInternet: HINTERNET;
  hConnect: HINTERNET;
  Buffer: array[0..1023] of Byte;
  BytesRead: DWORD;
  Stream: TMemoryStream;
begin
  Result := '';
  hInternet := InternetOpen('URLChecker', INTERNET_OPEN_TYPE_PRECONFIG, nil, nil, 0);
  if Assigned(hInternet) then
  try
    hConnect := InternetOpenUrl(hInternet, PChar(URL), nil, 0, INTERNET_FLAG_RELOAD, 0);
    if Assigned(hConnect) then
    try
      Stream := TMemoryStream.Create;
      try
        repeat
          if InternetReadFile(hConnect, @Buffer, SizeOf(Buffer), BytesRead) then
          begin
            if BytesRead > 0 then
              Stream.WriteBuffer(Buffer, BytesRead);
          end
          else
            Break;
        until BytesRead = 0;
        SetString(Result, PAnsiChar(Stream.Memory), Stream.Size);
      finally
        Stream.Free;
      end;
    finally
      InternetCloseHandle(hConnect);
    end;
  finally
    InternetCloseHandle(hInternet);
  end;
end;

procedure NotifyServiceOpened(const URL: string);
begin
  Writeln;
  Writeln('The service at ', URL, ' has changed.');
  PlaySound('SystemAsterisk', 0, SND_ALIAS or SND_ASYNC);
end;

var
  URL: string;
  IsOpen: Boolean;
  LastContent, CurrentContent: string;
begin
  try
    Write('Enter URL: ');
    Readln(URL);

    LastContent := '';
    while True do
    begin
      Writeln('Checking the service at ', URL, '...');
      ShowProgress('Checking', 50);
      CurrentContent := GetPageContent(URL);

      if LastContent <> '' then
        IsOpen := LastContent <> CurrentContent
      else
        IsOpen := False;

      if IsOpen then
      begin
        NotifyServiceOpened(URL);
        Break;
      end
      else
        Writeln('The service at ', URL, ' has not changed.');

      LastContent := CurrentContent;
      Sleep(3000);  // Wait for 3 seconds before checking again
    end;
  except
    on E: Exception do
      Writeln(E.ClassName, ': ', E.Message);
  end;

  Write('Press <Enter> to exit...');
  Readln;
end.
